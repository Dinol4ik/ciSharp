// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Проект_Отлов_животных;

#nullable disable

namespace Проект_Отлов_животных.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20230606120046_municipalContract")]
    partial class municipalContract
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Проект_Отлов_животных.Models+Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalHabitat")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Kategory")
                        .HasColumnType("text");

                    b.Property<int>("LocalityId")
                        .HasColumnType("integer");

                    b.Property<bool?>("UrgencyOfExecution")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Locality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Administration")
                        .HasColumnType("text");

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locality");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Municipal_contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Date_Of_Action")
                        .HasColumnType("text");

                    b.Property<string>("Date_Of_Conclusion")
                        .HasColumnType("text");

                    b.Property<long?>("Number")
                        .HasColumnType("bigint");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("municipal_Contracts");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("INN")
                        .HasColumnType("text");

                    b.Property<string>("KPP")
                        .HasColumnType("text");

                    b.Property<int>("LocalityId")
                        .HasColumnType("integer");

                    b.Property<string>("Registation_addres")
                        .HasColumnType("text");

                    b.Property<string>("Sole_Properietor")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("TypeOfId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.HasIndex("TypeOfId");

                    b.ToTable("organizations");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Type_Of_Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LocalityId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("Type_Of_OrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocalityId");

                    b.HasIndex("Type_Of_OrganizationId");

                    b.ToTable("type_Of_Organizations");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("OMS")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Applications", b =>
                {
                    b.HasOne("Проект_Отлов_животных.Models+Locality", "Locality")
                        .WithMany("Applications")
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Municipal_contract", b =>
                {
                    b.HasOne("Проект_Отлов_животных.Models+Organization", "Organization")
                        .WithMany("Municipal_contracts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Organization", b =>
                {
                    b.HasOne("Проект_Отлов_животных.Models+Locality", "Locality")
                        .WithMany()
                        .HasForeignKey("LocalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Проект_Отлов_животных.Models+Locality", "TypeOf")
                        .WithMany()
                        .HasForeignKey("TypeOfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locality");

                    b.Navigation("TypeOf");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Type_Of_Organization", b =>
                {
                    b.HasOne("Проект_Отлов_животных.Models+Locality", null)
                        .WithMany("type_Of_Organizations")
                        .HasForeignKey("LocalityId");

                    b.HasOne("Проект_Отлов_животных.Models+Type_Of_Organization", null)
                        .WithMany("type_Of_Organizations")
                        .HasForeignKey("Type_Of_OrganizationId");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Locality", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("type_Of_Organizations");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Organization", b =>
                {
                    b.Navigation("Municipal_contracts");
                });

            modelBuilder.Entity("Проект_Отлов_животных.Models+Type_Of_Organization", b =>
                {
                    b.Navigation("type_Of_Organizations");
                });
#pragma warning restore 612, 618
        }
    }
}
